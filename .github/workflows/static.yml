# # Simple workflow for deploying static content to GitHub Pages
# name: Deploy static content to Pages
#
# # triggers
# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]
#
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:
#
# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write
#
# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false
#
# # jobs
# jobs:
#   # Single deploy job since we're just deploying
#   first_job:
#     name: first job
#   deploy:
#     name: static deployment
#     environment:
#       #This is simply a name for the environment used to label this deployment. It's not related to the actual branch you're deploying from
#       name: github-pages
#       # dinamically takes the url from the last step
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         # checkout the commit and retrieve code so the workflow can access it https://github.com/actions/checkout
#         uses: actions/checkout@v4
#
#       - name: Setup Pages
#         # configuring GitHub Pages for the repository
#         uses: actions/configure-pages@v5
#
#       - name: Upload artifact
#         #uploads the repository contents (or specific files) as an artifact that can be used in later steps.
#         uses: actions/upload-pages-artifact@v3
#         with:
#           # Upload entire repository
#           path: "."
#
#       - name: Deploy to GitHub Pages
#         # deploy Actions artifacts to GitHub Pages.
#         id: deployment
#         uses: actions/deploy-pages@v4
